//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idAddress_Patients", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Addresses), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Patients), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idDoctor_HAD", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Doctors), "HealingAndDiagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HealingAndDiagnostics), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idDoctor_HADND", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Doctors), "HAD_NextDoctors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_NextDoctors), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idDoctor_MedAppointments", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Doctors), "MedAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.MedAppointments), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idRole_Doctors", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Roles), "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Doctors), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idDrug_HADD", "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Drugs), "HAD_Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_Drugs), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idPatient_Emails", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Patients), "Emails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Emails), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idGender_Patients", "Genders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Genders), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Patients), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idHAD_HADD", "HealingAndDiagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.HealingAndDiagnostics), "HAD_Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_Drugs), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idHAD_HADND", "HealingAndDiagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.HealingAndDiagnostics), "HAD_NextDoctors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_NextDoctors), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idHAD_HADP", "HealingAndDiagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.HealingAndDiagnostics), "HAD_Procedures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_Procedures), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idProc_HADP", "MedProcedures", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.MedProcedures), "HAD_Procedures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HAD_Procedures), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idMedApp_HAD", "MedAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.MedAppointments), "HealingAndDiagnostics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.HealingAndDiagnostics), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idHospBlock_Hosp", "HospBlocks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.HospBlocks), "Hospitalizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Hospitalizations), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idHospStatus_Hosp", "HospStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.HospStatus), "Hospitalizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Hospitalizations), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idMedApp_Hosp", "MedAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.MedAppointments), "Hospitalizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Hospitalizations), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.InsuranceCompanies), "InsurancePolicies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.InsurancePolicies), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idPassport_InsurancePolicies", "Passports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Passports), "InsurancePolicies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.InsurancePolicies), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idPolicy_Medcards", "InsurancePolicies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.InsurancePolicies), "Medcards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Medcards), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idMedcard_MedAppointments", "Medcards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Medcards), "MedAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.MedAppointments), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idProcType_MedProcs", "ProcedureTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.ProcedureTypes), "MedProcedures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.MedProcedures), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idPatient_Passports", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Patients), "Passports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Passports), true)]
[assembly: EdmRelationshipAttribute("BigBoarsModel", "fk_idPatient_Phones", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MainApp.assets.models.Patients), "Phones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MainApp.assets.models.Phones), true)]

#endregion

namespace MainApp.assets.models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BigBoarsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BigBoarsEntities object using the connection string found in the 'BigBoarsEntities' section of the application configuration file.
        /// </summary>
        public BigBoarsEntities() : base("name=BigBoarsEntities", "BigBoarsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BigBoarsEntities object.
        /// </summary>
        public BigBoarsEntities(string connectionString) : base(connectionString, "BigBoarsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BigBoarsEntities object.
        /// </summary>
        public BigBoarsEntities(EntityConnection connection) : base(connection, "BigBoarsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Addresses> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Addresses>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Addresses> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctors> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctors>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctors> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Drugs> Drugs
        {
            get
            {
                if ((_Drugs == null))
                {
                    _Drugs = base.CreateObjectSet<Drugs>("Drugs");
                }
                return _Drugs;
            }
        }
        private ObjectSet<Drugs> _Drugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Emails> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Emails>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Emails> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genders> Genders
        {
            get
            {
                if ((_Genders == null))
                {
                    _Genders = base.CreateObjectSet<Genders>("Genders");
                }
                return _Genders;
            }
        }
        private ObjectSet<Genders> _Genders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HAD_Drugs> HAD_Drugs
        {
            get
            {
                if ((_HAD_Drugs == null))
                {
                    _HAD_Drugs = base.CreateObjectSet<HAD_Drugs>("HAD_Drugs");
                }
                return _HAD_Drugs;
            }
        }
        private ObjectSet<HAD_Drugs> _HAD_Drugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HAD_NextDoctors> HAD_NextDoctors
        {
            get
            {
                if ((_HAD_NextDoctors == null))
                {
                    _HAD_NextDoctors = base.CreateObjectSet<HAD_NextDoctors>("HAD_NextDoctors");
                }
                return _HAD_NextDoctors;
            }
        }
        private ObjectSet<HAD_NextDoctors> _HAD_NextDoctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HAD_Procedures> HAD_Procedures
        {
            get
            {
                if ((_HAD_Procedures == null))
                {
                    _HAD_Procedures = base.CreateObjectSet<HAD_Procedures>("HAD_Procedures");
                }
                return _HAD_Procedures;
            }
        }
        private ObjectSet<HAD_Procedures> _HAD_Procedures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HealingAndDiagnostics> HealingAndDiagnostics
        {
            get
            {
                if ((_HealingAndDiagnostics == null))
                {
                    _HealingAndDiagnostics = base.CreateObjectSet<HealingAndDiagnostics>("HealingAndDiagnostics");
                }
                return _HealingAndDiagnostics;
            }
        }
        private ObjectSet<HealingAndDiagnostics> _HealingAndDiagnostics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospBlocks> HospBlocks
        {
            get
            {
                if ((_HospBlocks == null))
                {
                    _HospBlocks = base.CreateObjectSet<HospBlocks>("HospBlocks");
                }
                return _HospBlocks;
            }
        }
        private ObjectSet<HospBlocks> _HospBlocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hospitalizations> Hospitalizations
        {
            get
            {
                if ((_Hospitalizations == null))
                {
                    _Hospitalizations = base.CreateObjectSet<Hospitalizations>("Hospitalizations");
                }
                return _Hospitalizations;
            }
        }
        private ObjectSet<Hospitalizations> _Hospitalizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospStatus> HospStatus
        {
            get
            {
                if ((_HospStatus == null))
                {
                    _HospStatus = base.CreateObjectSet<HospStatus>("HospStatus");
                }
                return _HospStatus;
            }
        }
        private ObjectSet<HospStatus> _HospStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceCompanies> InsuranceCompanies
        {
            get
            {
                if ((_InsuranceCompanies == null))
                {
                    _InsuranceCompanies = base.CreateObjectSet<InsuranceCompanies>("InsuranceCompanies");
                }
                return _InsuranceCompanies;
            }
        }
        private ObjectSet<InsuranceCompanies> _InsuranceCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsurancePolicies> InsurancePolicies
        {
            get
            {
                if ((_InsurancePolicies == null))
                {
                    _InsurancePolicies = base.CreateObjectSet<InsurancePolicies>("InsurancePolicies");
                }
                return _InsurancePolicies;
            }
        }
        private ObjectSet<InsurancePolicies> _InsurancePolicies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedAppointments> MedAppointments
        {
            get
            {
                if ((_MedAppointments == null))
                {
                    _MedAppointments = base.CreateObjectSet<MedAppointments>("MedAppointments");
                }
                return _MedAppointments;
            }
        }
        private ObjectSet<MedAppointments> _MedAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medcards> Medcards
        {
            get
            {
                if ((_Medcards == null))
                {
                    _Medcards = base.CreateObjectSet<Medcards>("Medcards");
                }
                return _Medcards;
            }
        }
        private ObjectSet<Medcards> _Medcards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedProcedures> MedProcedures
        {
            get
            {
                if ((_MedProcedures == null))
                {
                    _MedProcedures = base.CreateObjectSet<MedProcedures>("MedProcedures");
                }
                return _MedProcedures;
            }
        }
        private ObjectSet<MedProcedures> _MedProcedures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Passports> Passports
        {
            get
            {
                if ((_Passports == null))
                {
                    _Passports = base.CreateObjectSet<Passports>("Passports");
                }
                return _Passports;
            }
        }
        private ObjectSet<Passports> _Passports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patients> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patients>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patients> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phones> Phones
        {
            get
            {
                if ((_Phones == null))
                {
                    _Phones = base.CreateObjectSet<Phones>("Phones");
                }
                return _Phones;
            }
        }
        private ObjectSet<Phones> _Phones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcedureTypes> ProcedureTypes
        {
            get
            {
                if ((_ProcedureTypes == null))
                {
                    _ProcedureTypes = base.CreateObjectSet<ProcedureTypes>("ProcedureTypes");
                }
                return _ProcedureTypes;
            }
        }
        private ObjectSet<ProcedureTypes> _ProcedureTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Addresses addresses)
        {
            base.AddObject("Addresses", addresses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctors doctors)
        {
            base.AddObject("Doctors", doctors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugs(Drugs drugs)
        {
            base.AddObject("Drugs", drugs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Emails emails)
        {
            base.AddObject("Emails", emails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenders(Genders genders)
        {
            base.AddObject("Genders", genders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HAD_Drugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHAD_Drugs(HAD_Drugs hAD_Drugs)
        {
            base.AddObject("HAD_Drugs", hAD_Drugs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HAD_NextDoctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHAD_NextDoctors(HAD_NextDoctors hAD_NextDoctors)
        {
            base.AddObject("HAD_NextDoctors", hAD_NextDoctors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HAD_Procedures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHAD_Procedures(HAD_Procedures hAD_Procedures)
        {
            base.AddObject("HAD_Procedures", hAD_Procedures);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HealingAndDiagnostics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHealingAndDiagnostics(HealingAndDiagnostics healingAndDiagnostics)
        {
            base.AddObject("HealingAndDiagnostics", healingAndDiagnostics);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospBlocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospBlocks(HospBlocks hospBlocks)
        {
            base.AddObject("HospBlocks", hospBlocks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hospitalizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospitalizations(Hospitalizations hospitalizations)
        {
            base.AddObject("Hospitalizations", hospitalizations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospStatus(HospStatus hospStatus)
        {
            base.AddObject("HospStatus", hospStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceCompanies(InsuranceCompanies insuranceCompanies)
        {
            base.AddObject("InsuranceCompanies", insuranceCompanies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsurancePolicies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsurancePolicies(InsurancePolicies insurancePolicies)
        {
            base.AddObject("InsurancePolicies", insurancePolicies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedAppointments(MedAppointments medAppointments)
        {
            base.AddObject("MedAppointments", medAppointments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medcards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedcards(Medcards medcards)
        {
            base.AddObject("Medcards", medcards);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedProcedures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedProcedures(MedProcedures medProcedures)
        {
            base.AddObject("MedProcedures", medProcedures);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassports(Passports passports)
        {
            base.AddObject("Passports", passports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patients patients)
        {
            base.AddObject("Patients", patients);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Phones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhones(Phones phones)
        {
            base.AddObject("Phones", phones);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcedureTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcedureTypes(ProcedureTypes procedureTypes)
        {
            base.AddObject("ProcedureTypes", procedureTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Addresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Addresses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Addresses object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="houseNumber">Initial value of the HouseNumber property.</param>
        public static Addresses CreateAddresses(global::System.Int32 id, global::System.String city, global::System.String street, global::System.String houseNumber)
        {
            Addresses addresses = new Addresses();
            addresses.id = id;
            addresses.City = city;
            addresses.Street = street;
            addresses.HouseNumber = houseNumber;
            return addresses;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, false, "HouseNumber");
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FlatNumber
        {
            get
            {
                return _FlatNumber;
            }
            set
            {
                OnFlatNumberChanging(value);
                ReportPropertyChanging("FlatNumber");
                _FlatNumber = StructuralObject.SetValidValue(value, true, "FlatNumber");
                ReportPropertyChanged("FlatNumber");
                OnFlatNumberChanged();
            }
        }
        private global::System.String _FlatNumber;
        partial void OnFlatNumberChanging(global::System.String value);
        partial void OnFlatNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idAddress_Patients", "Patients")]
        public EntityCollection<Patients> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patients>("BigBoarsModel.fk_idAddress_Patients", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patients>("BigBoarsModel.fk_idAddress_Patients", "Patients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Doctors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctors object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idRole">Initial value of the idRole property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="passwrd">Initial value of the Passwrd property.</param>
        public static Doctors CreateDoctors(global::System.Int32 id, global::System.Int32 idRole, global::System.String firstName, global::System.String lastName, global::System.String username, global::System.String passwrd)
        {
            Doctors doctors = new Doctors();
            doctors.id = id;
            doctors.idRole = idRole;
            doctors.FirstName = firstName;
            doctors.LastName = lastName;
            doctors.Username = username;
            doctors.Passwrd = passwrd;
            return doctors;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idRole
        {
            get
            {
                return _idRole;
            }
            set
            {
                OnidRoleChanging(value);
                ReportPropertyChanging("idRole");
                _idRole = StructuralObject.SetValidValue(value, "idRole");
                ReportPropertyChanged("idRole");
                OnidRoleChanged();
            }
        }
        private global::System.Int32 _idRole;
        partial void OnidRoleChanging(global::System.Int32 value);
        partial void OnidRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passwrd
        {
            get
            {
                return _Passwrd;
            }
            set
            {
                OnPasswrdChanging(value);
                ReportPropertyChanging("Passwrd");
                _Passwrd = StructuralObject.SetValidValue(value, false, "Passwrd");
                ReportPropertyChanged("Passwrd");
                OnPasswrdChanged();
            }
        }
        private global::System.String _Passwrd;
        partial void OnPasswrdChanging(global::System.String value);
        partial void OnPasswrdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_HAD", "HealingAndDiagnostics")]
        public EntityCollection<HealingAndDiagnostics> HealingAndDiagnostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HealingAndDiagnostics>("BigBoarsModel.fk_idDoctor_HAD", "HealingAndDiagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HealingAndDiagnostics>("BigBoarsModel.fk_idDoctor_HAD", "HealingAndDiagnostics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_HADND", "HAD_NextDoctors")]
        public EntityCollection<HAD_NextDoctors> HAD_NextDoctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_NextDoctors>("BigBoarsModel.fk_idDoctor_HADND", "HAD_NextDoctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_NextDoctors>("BigBoarsModel.fk_idDoctor_HADND", "HAD_NextDoctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_MedAppointments", "MedAppointments")]
        public EntityCollection<MedAppointments> MedAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedAppointments>("BigBoarsModel.fk_idDoctor_MedAppointments", "MedAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedAppointments>("BigBoarsModel.fk_idDoctor_MedAppointments", "MedAppointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idRole_Doctors", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("BigBoarsModel.fk_idRole_Doctors", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("BigBoarsModel.fk_idRole_Doctors", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("BigBoarsModel.fk_idRole_Doctors", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("BigBoarsModel.fk_idRole_Doctors", "Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Drugs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Drugs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Drugs object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="drugFullName">Initial value of the DrugFullName property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Drugs CreateDrugs(global::System.Int32 id, global::System.String drugFullName, global::System.String companyName)
        {
            Drugs drugs = new Drugs();
            drugs.id = id;
            drugs.DrugFullName = drugFullName;
            drugs.CompanyName = companyName;
            return drugs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugFullName
        {
            get
            {
                return _DrugFullName;
            }
            set
            {
                OnDrugFullNameChanging(value);
                ReportPropertyChanging("DrugFullName");
                _DrugFullName = StructuralObject.SetValidValue(value, false, "DrugFullName");
                ReportPropertyChanged("DrugFullName");
                OnDrugFullNameChanged();
            }
        }
        private global::System.String _DrugFullName;
        partial void OnDrugFullNameChanging(global::System.String value);
        partial void OnDrugFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDrug_HADD", "HAD_Drugs")]
        public EntityCollection<HAD_Drugs> HAD_Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_Drugs>("BigBoarsModel.fk_idDrug_HADD", "HAD_Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_Drugs>("BigBoarsModel.fk_idDrug_HADD", "HAD_Drugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Emails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Emails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Emails object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idPatient">Initial value of the idPatient property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Emails CreateEmails(global::System.Int32 id, global::System.Int32 idPatient, global::System.String email)
        {
            Emails emails = new Emails();
            emails.id = id;
            emails.idPatient = idPatient;
            emails.Email = email;
            return emails;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPatient
        {
            get
            {
                return _idPatient;
            }
            set
            {
                OnidPatientChanging(value);
                ReportPropertyChanging("idPatient");
                _idPatient = StructuralObject.SetValidValue(value, "idPatient");
                ReportPropertyChanged("idPatient");
                OnidPatientChanged();
            }
        }
        private global::System.Int32 _idPatient;
        partial void OnidPatientChanging(global::System.Int32 value);
        partial void OnidPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Emails", "Patients")]
        public Patients Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Emails", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Emails", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patients> PatientsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Emails", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Emails", "Patients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Genders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genders object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="genderName">Initial value of the GenderName property.</param>
        public static Genders CreateGenders(global::System.Int32 id, global::System.String genderName)
        {
            Genders genders = new Genders();
            genders.id = id;
            genders.GenderName = genderName;
            return genders;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderName
        {
            get
            {
                return _GenderName;
            }
            set
            {
                OnGenderNameChanging(value);
                ReportPropertyChanging("GenderName");
                _GenderName = StructuralObject.SetValidValue(value, false, "GenderName");
                ReportPropertyChanged("GenderName");
                OnGenderNameChanged();
            }
        }
        private global::System.String _GenderName;
        partial void OnGenderNameChanging(global::System.String value);
        partial void OnGenderNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idGender_Patients", "Patients")]
        public EntityCollection<Patients> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patients>("BigBoarsModel.fk_idGender_Patients", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patients>("BigBoarsModel.fk_idGender_Patients", "Patients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HAD_Drugs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HAD_Drugs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HAD_Drugs object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idHAD">Initial value of the idHAD property.</param>
        /// <param name="idDrug">Initial value of the idDrug property.</param>
        /// <param name="doze">Initial value of the Doze property.</param>
        /// <param name="consumingFormat">Initial value of the ConsumingFormat property.</param>
        public static HAD_Drugs CreateHAD_Drugs(global::System.Int32 id, global::System.Int32 idHAD, global::System.Int32 idDrug, global::System.String doze, global::System.String consumingFormat)
        {
            HAD_Drugs hAD_Drugs = new HAD_Drugs();
            hAD_Drugs.id = id;
            hAD_Drugs.idHAD = idHAD;
            hAD_Drugs.idDrug = idDrug;
            hAD_Drugs.Doze = doze;
            hAD_Drugs.ConsumingFormat = consumingFormat;
            return hAD_Drugs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHAD
        {
            get
            {
                return _idHAD;
            }
            set
            {
                OnidHADChanging(value);
                ReportPropertyChanging("idHAD");
                _idHAD = StructuralObject.SetValidValue(value, "idHAD");
                ReportPropertyChanged("idHAD");
                OnidHADChanged();
            }
        }
        private global::System.Int32 _idHAD;
        partial void OnidHADChanging(global::System.Int32 value);
        partial void OnidHADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idDrug
        {
            get
            {
                return _idDrug;
            }
            set
            {
                OnidDrugChanging(value);
                ReportPropertyChanging("idDrug");
                _idDrug = StructuralObject.SetValidValue(value, "idDrug");
                ReportPropertyChanged("idDrug");
                OnidDrugChanged();
            }
        }
        private global::System.Int32 _idDrug;
        partial void OnidDrugChanging(global::System.Int32 value);
        partial void OnidDrugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Doze
        {
            get
            {
                return _Doze;
            }
            set
            {
                OnDozeChanging(value);
                ReportPropertyChanging("Doze");
                _Doze = StructuralObject.SetValidValue(value, false, "Doze");
                ReportPropertyChanged("Doze");
                OnDozeChanged();
            }
        }
        private global::System.String _Doze;
        partial void OnDozeChanging(global::System.String value);
        partial void OnDozeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConsumingFormat
        {
            get
            {
                return _ConsumingFormat;
            }
            set
            {
                OnConsumingFormatChanging(value);
                ReportPropertyChanging("ConsumingFormat");
                _ConsumingFormat = StructuralObject.SetValidValue(value, false, "ConsumingFormat");
                ReportPropertyChanged("ConsumingFormat");
                OnConsumingFormatChanged();
            }
        }
        private global::System.String _ConsumingFormat;
        partial void OnConsumingFormatChanging(global::System.String value);
        partial void OnConsumingFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraInfo
        {
            get
            {
                return _ExtraInfo;
            }
            set
            {
                OnExtraInfoChanging(value);
                ReportPropertyChanging("ExtraInfo");
                _ExtraInfo = StructuralObject.SetValidValue(value, true, "ExtraInfo");
                ReportPropertyChanged("ExtraInfo");
                OnExtraInfoChanged();
            }
        }
        private global::System.String _ExtraInfo;
        partial void OnExtraInfoChanging(global::System.String value);
        partial void OnExtraInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDrug_HADD", "Drugs")]
        public Drugs Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drugs>("BigBoarsModel.fk_idDrug_HADD", "Drugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drugs>("BigBoarsModel.fk_idDrug_HADD", "Drugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drugs> DrugsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drugs>("BigBoarsModel.fk_idDrug_HADD", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drugs>("BigBoarsModel.fk_idDrug_HADD", "Drugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADD", "HealingAndDiagnostics")]
        public HealingAndDiagnostics HealingAndDiagnostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADD", "HealingAndDiagnostics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADD", "HealingAndDiagnostics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HealingAndDiagnostics> HealingAndDiagnosticsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADD", "HealingAndDiagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADD", "HealingAndDiagnostics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HAD_NextDoctors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HAD_NextDoctors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HAD_NextDoctors object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idHAD">Initial value of the idHAD property.</param>
        /// <param name="idDoctor">Initial value of the idDoctor property.</param>
        public static HAD_NextDoctors CreateHAD_NextDoctors(global::System.Int32 id, global::System.Int32 idHAD, global::System.Int32 idDoctor)
        {
            HAD_NextDoctors hAD_NextDoctors = new HAD_NextDoctors();
            hAD_NextDoctors.id = id;
            hAD_NextDoctors.idHAD = idHAD;
            hAD_NextDoctors.idDoctor = idDoctor;
            return hAD_NextDoctors;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHAD
        {
            get
            {
                return _idHAD;
            }
            set
            {
                OnidHADChanging(value);
                ReportPropertyChanging("idHAD");
                _idHAD = StructuralObject.SetValidValue(value, "idHAD");
                ReportPropertyChanged("idHAD");
                OnidHADChanged();
            }
        }
        private global::System.Int32 _idHAD;
        partial void OnidHADChanging(global::System.Int32 value);
        partial void OnidHADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idDoctor
        {
            get
            {
                return _idDoctor;
            }
            set
            {
                OnidDoctorChanging(value);
                ReportPropertyChanging("idDoctor");
                _idDoctor = StructuralObject.SetValidValue(value, "idDoctor");
                ReportPropertyChanged("idDoctor");
                OnidDoctorChanged();
            }
        }
        private global::System.Int32 _idDoctor;
        partial void OnidDoctorChanging(global::System.Int32 value);
        partial void OnidDoctorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraInfo
        {
            get
            {
                return _ExtraInfo;
            }
            set
            {
                OnExtraInfoChanging(value);
                ReportPropertyChanging("ExtraInfo");
                _ExtraInfo = StructuralObject.SetValidValue(value, true, "ExtraInfo");
                ReportPropertyChanged("ExtraInfo");
                OnExtraInfoChanged();
            }
        }
        private global::System.String _ExtraInfo;
        partial void OnExtraInfoChanging(global::System.String value);
        partial void OnExtraInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_HADND", "Doctors")]
        public Doctors Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HADND", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HADND", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctors> DoctorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HADND", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HADND", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADND", "HealingAndDiagnostics")]
        public HealingAndDiagnostics HealingAndDiagnostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADND", "HealingAndDiagnostics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADND", "HealingAndDiagnostics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HealingAndDiagnostics> HealingAndDiagnosticsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADND", "HealingAndDiagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADND", "HealingAndDiagnostics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HAD_Procedures")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HAD_Procedures : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HAD_Procedures object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idHAD">Initial value of the idHAD property.</param>
        /// <param name="idProc">Initial value of the idProc property.</param>
        public static HAD_Procedures CreateHAD_Procedures(global::System.Int32 id, global::System.Int32 idHAD, global::System.Int32 idProc)
        {
            HAD_Procedures hAD_Procedures = new HAD_Procedures();
            hAD_Procedures.id = id;
            hAD_Procedures.idHAD = idHAD;
            hAD_Procedures.idProc = idProc;
            return hAD_Procedures;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHAD
        {
            get
            {
                return _idHAD;
            }
            set
            {
                OnidHADChanging(value);
                ReportPropertyChanging("idHAD");
                _idHAD = StructuralObject.SetValidValue(value, "idHAD");
                ReportPropertyChanged("idHAD");
                OnidHADChanged();
            }
        }
        private global::System.Int32 _idHAD;
        partial void OnidHADChanging(global::System.Int32 value);
        partial void OnidHADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProc
        {
            get
            {
                return _idProc;
            }
            set
            {
                OnidProcChanging(value);
                ReportPropertyChanging("idProc");
                _idProc = StructuralObject.SetValidValue(value, "idProc");
                ReportPropertyChanged("idProc");
                OnidProcChanged();
            }
        }
        private global::System.Int32 _idProc;
        partial void OnidProcChanging(global::System.Int32 value);
        partial void OnidProcChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADP", "HealingAndDiagnostics")]
        public HealingAndDiagnostics HealingAndDiagnostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADP", "HealingAndDiagnostics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADP", "HealingAndDiagnostics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HealingAndDiagnostics> HealingAndDiagnosticsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADP", "HealingAndDiagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HealingAndDiagnostics>("BigBoarsModel.fk_idHAD_HADP", "HealingAndDiagnostics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idProc_HADP", "MedProcedures")]
        public MedProcedures MedProcedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedProcedures>("BigBoarsModel.fk_idProc_HADP", "MedProcedures").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedProcedures>("BigBoarsModel.fk_idProc_HADP", "MedProcedures").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedProcedures> MedProceduresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedProcedures>("BigBoarsModel.fk_idProc_HADP", "MedProcedures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedProcedures>("BigBoarsModel.fk_idProc_HADP", "MedProcedures", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HealingAndDiagnostics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HealingAndDiagnostics : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HealingAndDiagnostics object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idMedApp">Initial value of the idMedApp property.</param>
        /// <param name="anamnezHarvest">Initial value of the AnamnezHarvest property.</param>
        /// <param name="symptomatics">Initial value of the Symptomatics property.</param>
        /// <param name="doctorRecommendations">Initial value of the DoctorRecommendations property.</param>
        /// <param name="idDoctor">Initial value of the idDoctor property.</param>
        public static HealingAndDiagnostics CreateHealingAndDiagnostics(global::System.Int32 id, global::System.Int32 idMedApp, global::System.String anamnezHarvest, global::System.String symptomatics, global::System.String doctorRecommendations, global::System.Int32 idDoctor)
        {
            HealingAndDiagnostics healingAndDiagnostics = new HealingAndDiagnostics();
            healingAndDiagnostics.id = id;
            healingAndDiagnostics.idMedApp = idMedApp;
            healingAndDiagnostics.AnamnezHarvest = anamnezHarvest;
            healingAndDiagnostics.Symptomatics = symptomatics;
            healingAndDiagnostics.DoctorRecommendations = doctorRecommendations;
            healingAndDiagnostics.idDoctor = idDoctor;
            return healingAndDiagnostics;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMedApp
        {
            get
            {
                return _idMedApp;
            }
            set
            {
                OnidMedAppChanging(value);
                ReportPropertyChanging("idMedApp");
                _idMedApp = StructuralObject.SetValidValue(value, "idMedApp");
                ReportPropertyChanged("idMedApp");
                OnidMedAppChanged();
            }
        }
        private global::System.Int32 _idMedApp;
        partial void OnidMedAppChanging(global::System.Int32 value);
        partial void OnidMedAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnamnezHarvest
        {
            get
            {
                return _AnamnezHarvest;
            }
            set
            {
                OnAnamnezHarvestChanging(value);
                ReportPropertyChanging("AnamnezHarvest");
                _AnamnezHarvest = StructuralObject.SetValidValue(value, false, "AnamnezHarvest");
                ReportPropertyChanged("AnamnezHarvest");
                OnAnamnezHarvestChanged();
            }
        }
        private global::System.String _AnamnezHarvest;
        partial void OnAnamnezHarvestChanging(global::System.String value);
        partial void OnAnamnezHarvestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symptomatics
        {
            get
            {
                return _Symptomatics;
            }
            set
            {
                OnSymptomaticsChanging(value);
                ReportPropertyChanging("Symptomatics");
                _Symptomatics = StructuralObject.SetValidValue(value, false, "Symptomatics");
                ReportPropertyChanged("Symptomatics");
                OnSymptomaticsChanged();
            }
        }
        private global::System.String _Symptomatics;
        partial void OnSymptomaticsChanging(global::System.String value);
        partial void OnSymptomaticsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoctorRecommendations
        {
            get
            {
                return _DoctorRecommendations;
            }
            set
            {
                OnDoctorRecommendationsChanging(value);
                ReportPropertyChanging("DoctorRecommendations");
                _DoctorRecommendations = StructuralObject.SetValidValue(value, false, "DoctorRecommendations");
                ReportPropertyChanged("DoctorRecommendations");
                OnDoctorRecommendationsChanged();
            }
        }
        private global::System.String _DoctorRecommendations;
        partial void OnDoctorRecommendationsChanging(global::System.String value);
        partial void OnDoctorRecommendationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idDoctor
        {
            get
            {
                return _idDoctor;
            }
            set
            {
                OnidDoctorChanging(value);
                ReportPropertyChanging("idDoctor");
                _idDoctor = StructuralObject.SetValidValue(value, "idDoctor");
                ReportPropertyChanged("idDoctor");
                OnidDoctorChanged();
            }
        }
        private global::System.Int32 _idDoctor;
        partial void OnidDoctorChanging(global::System.Int32 value);
        partial void OnidDoctorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_HAD", "Doctors")]
        public Doctors Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HAD", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HAD", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctors> DoctorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HAD", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_HAD", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADD", "HAD_Drugs")]
        public EntityCollection<HAD_Drugs> HAD_Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_Drugs>("BigBoarsModel.fk_idHAD_HADD", "HAD_Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_Drugs>("BigBoarsModel.fk_idHAD_HADD", "HAD_Drugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADND", "HAD_NextDoctors")]
        public EntityCollection<HAD_NextDoctors> HAD_NextDoctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_NextDoctors>("BigBoarsModel.fk_idHAD_HADND", "HAD_NextDoctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_NextDoctors>("BigBoarsModel.fk_idHAD_HADND", "HAD_NextDoctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHAD_HADP", "HAD_Procedures")]
        public EntityCollection<HAD_Procedures> HAD_Procedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_Procedures>("BigBoarsModel.fk_idHAD_HADP", "HAD_Procedures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_Procedures>("BigBoarsModel.fk_idHAD_HADP", "HAD_Procedures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedApp_HAD", "MedAppointments")]
        public MedAppointments MedAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_HAD", "MedAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_HAD", "MedAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedAppointments> MedAppointmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_HAD", "MedAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_HAD", "MedAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HospBlocks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospBlocks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospBlocks object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="blockName">Initial value of the BlockName property.</param>
        public static HospBlocks CreateHospBlocks(global::System.Int32 id, global::System.String blockName)
        {
            HospBlocks hospBlocks = new HospBlocks();
            hospBlocks.id = id;
            hospBlocks.BlockName = blockName;
            return hospBlocks;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlockName
        {
            get
            {
                return _BlockName;
            }
            set
            {
                OnBlockNameChanging(value);
                ReportPropertyChanging("BlockName");
                _BlockName = StructuralObject.SetValidValue(value, false, "BlockName");
                ReportPropertyChanged("BlockName");
                OnBlockNameChanged();
            }
        }
        private global::System.String _BlockName;
        partial void OnBlockNameChanging(global::System.String value);
        partial void OnBlockNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHospBlock_Hosp", "Hospitalizations")]
        public EntityCollection<Hospitalizations> Hospitalizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idHospBlock_Hosp", "Hospitalizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idHospBlock_Hosp", "Hospitalizations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Hospitalizations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hospitalizations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hospitalizations object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idMedApp">Initial value of the idMedApp property.</param>
        /// <param name="hospGoal">Initial value of the HospGoal property.</param>
        /// <param name="idHospBlock">Initial value of the idHospBlock property.</param>
        /// <param name="idHospStatus">Initial value of the idHospStatus property.</param>
        /// <param name="hospDate">Initial value of the HospDate property.</param>
        /// <param name="plannedDehospDate">Initial value of the PlannedDehospDate property.</param>
        /// <param name="bedNumber">Initial value of the BedNumber property.</param>
        /// <param name="therapistCode">Initial value of the TherapistCode property.</param>
        public static Hospitalizations CreateHospitalizations(global::System.Int32 id, global::System.Int32 idMedApp, global::System.String hospGoal, global::System.Int32 idHospBlock, global::System.Int32 idHospStatus, global::System.DateTime hospDate, global::System.DateTime plannedDehospDate, global::System.String bedNumber, global::System.String therapistCode)
        {
            Hospitalizations hospitalizations = new Hospitalizations();
            hospitalizations.id = id;
            hospitalizations.idMedApp = idMedApp;
            hospitalizations.HospGoal = hospGoal;
            hospitalizations.idHospBlock = idHospBlock;
            hospitalizations.idHospStatus = idHospStatus;
            hospitalizations.HospDate = hospDate;
            hospitalizations.PlannedDehospDate = plannedDehospDate;
            hospitalizations.BedNumber = bedNumber;
            hospitalizations.TherapistCode = therapistCode;
            return hospitalizations;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMedApp
        {
            get
            {
                return _idMedApp;
            }
            set
            {
                OnidMedAppChanging(value);
                ReportPropertyChanging("idMedApp");
                _idMedApp = StructuralObject.SetValidValue(value, "idMedApp");
                ReportPropertyChanged("idMedApp");
                OnidMedAppChanged();
            }
        }
        private global::System.Int32 _idMedApp;
        partial void OnidMedAppChanging(global::System.Int32 value);
        partial void OnidMedAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HospGoal
        {
            get
            {
                return _HospGoal;
            }
            set
            {
                OnHospGoalChanging(value);
                ReportPropertyChanging("HospGoal");
                _HospGoal = StructuralObject.SetValidValue(value, false, "HospGoal");
                ReportPropertyChanged("HospGoal");
                OnHospGoalChanged();
            }
        }
        private global::System.String _HospGoal;
        partial void OnHospGoalChanging(global::System.String value);
        partial void OnHospGoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHospBlock
        {
            get
            {
                return _idHospBlock;
            }
            set
            {
                OnidHospBlockChanging(value);
                ReportPropertyChanging("idHospBlock");
                _idHospBlock = StructuralObject.SetValidValue(value, "idHospBlock");
                ReportPropertyChanged("idHospBlock");
                OnidHospBlockChanged();
            }
        }
        private global::System.Int32 _idHospBlock;
        partial void OnidHospBlockChanging(global::System.Int32 value);
        partial void OnidHospBlockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HospPrice
        {
            get
            {
                return _HospPrice;
            }
            set
            {
                OnHospPriceChanging(value);
                ReportPropertyChanging("HospPrice");
                _HospPrice = StructuralObject.SetValidValue(value, "HospPrice");
                ReportPropertyChanged("HospPrice");
                OnHospPriceChanged();
            }
        }
        private Nullable<global::System.Double> _HospPrice;
        partial void OnHospPriceChanging(Nullable<global::System.Double> value);
        partial void OnHospPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHospStatus
        {
            get
            {
                return _idHospStatus;
            }
            set
            {
                OnidHospStatusChanging(value);
                ReportPropertyChanging("idHospStatus");
                _idHospStatus = StructuralObject.SetValidValue(value, "idHospStatus");
                ReportPropertyChanged("idHospStatus");
                OnidHospStatusChanged();
            }
        }
        private global::System.Int32 _idHospStatus;
        partial void OnidHospStatusChanging(global::System.Int32 value);
        partial void OnidHospStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraInfo
        {
            get
            {
                return _ExtraInfo;
            }
            set
            {
                OnExtraInfoChanging(value);
                ReportPropertyChanging("ExtraInfo");
                _ExtraInfo = StructuralObject.SetValidValue(value, true, "ExtraInfo");
                ReportPropertyChanged("ExtraInfo");
                OnExtraInfoChanged();
            }
        }
        private global::System.String _ExtraInfo;
        partial void OnExtraInfoChanging(global::System.String value);
        partial void OnExtraInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HospDate
        {
            get
            {
                return _HospDate;
            }
            set
            {
                OnHospDateChanging(value);
                ReportPropertyChanging("HospDate");
                _HospDate = StructuralObject.SetValidValue(value, "HospDate");
                ReportPropertyChanged("HospDate");
                OnHospDateChanged();
            }
        }
        private global::System.DateTime _HospDate;
        partial void OnHospDateChanging(global::System.DateTime value);
        partial void OnHospDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PlannedDehospDate
        {
            get
            {
                return _PlannedDehospDate;
            }
            set
            {
                OnPlannedDehospDateChanging(value);
                ReportPropertyChanging("PlannedDehospDate");
                _PlannedDehospDate = StructuralObject.SetValidValue(value, "PlannedDehospDate");
                ReportPropertyChanged("PlannedDehospDate");
                OnPlannedDehospDateChanged();
            }
        }
        private global::System.DateTime _PlannedDehospDate;
        partial void OnPlannedDehospDateChanging(global::System.DateTime value);
        partial void OnPlannedDehospDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualDehospDate
        {
            get
            {
                return _ActualDehospDate;
            }
            set
            {
                OnActualDehospDateChanging(value);
                ReportPropertyChanging("ActualDehospDate");
                _ActualDehospDate = StructuralObject.SetValidValue(value, "ActualDehospDate");
                ReportPropertyChanged("ActualDehospDate");
                OnActualDehospDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualDehospDate;
        partial void OnActualDehospDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActualDehospDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BedNumber
        {
            get
            {
                return _BedNumber;
            }
            set
            {
                OnBedNumberChanging(value);
                ReportPropertyChanging("BedNumber");
                _BedNumber = StructuralObject.SetValidValue(value, false, "BedNumber");
                ReportPropertyChanged("BedNumber");
                OnBedNumberChanged();
            }
        }
        private global::System.String _BedNumber;
        partial void OnBedNumberChanging(global::System.String value);
        partial void OnBedNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TherapistCode
        {
            get
            {
                return _TherapistCode;
            }
            set
            {
                OnTherapistCodeChanging(value);
                ReportPropertyChanging("TherapistCode");
                _TherapistCode = StructuralObject.SetValidValue(value, false, "TherapistCode");
                ReportPropertyChanged("TherapistCode");
                OnTherapistCodeChanged();
            }
        }
        private global::System.String _TherapistCode;
        partial void OnTherapistCodeChanging(global::System.String value);
        partial void OnTherapistCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHospBlock_Hosp", "HospBlocks")]
        public HospBlocks HospBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospBlocks>("BigBoarsModel.fk_idHospBlock_Hosp", "HospBlocks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospBlocks>("BigBoarsModel.fk_idHospBlock_Hosp", "HospBlocks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospBlocks> HospBlocksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospBlocks>("BigBoarsModel.fk_idHospBlock_Hosp", "HospBlocks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospBlocks>("BigBoarsModel.fk_idHospBlock_Hosp", "HospBlocks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHospStatus_Hosp", "HospStatus")]
        public HospStatus HospStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospStatus>("BigBoarsModel.fk_idHospStatus_Hosp", "HospStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospStatus>("BigBoarsModel.fk_idHospStatus_Hosp", "HospStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospStatus> HospStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospStatus>("BigBoarsModel.fk_idHospStatus_Hosp", "HospStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospStatus>("BigBoarsModel.fk_idHospStatus_Hosp", "HospStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedApp_Hosp", "MedAppointments")]
        public MedAppointments MedAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_Hosp", "MedAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_Hosp", "MedAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedAppointments> MedAppointmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_Hosp", "MedAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedAppointments>("BigBoarsModel.fk_idMedApp_Hosp", "MedAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="HospStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospStatus object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static HospStatus CreateHospStatus(global::System.Int32 id, global::System.String statusName)
        {
            HospStatus hospStatus = new HospStatus();
            hospStatus.id = id;
            hospStatus.StatusName = statusName;
            return hospStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false, "StatusName");
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusReason
        {
            get
            {
                return _StatusReason;
            }
            set
            {
                OnStatusReasonChanging(value);
                ReportPropertyChanging("StatusReason");
                _StatusReason = StructuralObject.SetValidValue(value, true, "StatusReason");
                ReportPropertyChanged("StatusReason");
                OnStatusReasonChanged();
            }
        }
        private global::System.String _StatusReason;
        partial void OnStatusReasonChanging(global::System.String value);
        partial void OnStatusReasonChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idHospStatus_Hosp", "Hospitalizations")]
        public EntityCollection<Hospitalizations> Hospitalizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idHospStatus_Hosp", "Hospitalizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idHospStatus_Hosp", "Hospitalizations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="InsuranceCompanies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceCompanies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceCompanies object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static InsuranceCompanies CreateInsuranceCompanies(global::System.Int32 id, global::System.String companyName)
        {
            InsuranceCompanies insuranceCompanies = new InsuranceCompanies();
            insuranceCompanies.id = id;
            insuranceCompanies.CompanyName = companyName;
            return insuranceCompanies;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idInsuranceCompany_InsurancePolicies", "InsurancePolicies")]
        public EntityCollection<InsurancePolicies> InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsurancePolicies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsurancePolicies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="InsurancePolicies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsurancePolicies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsurancePolicies object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idInsuranceCompany">Initial value of the idInsuranceCompany property.</param>
        /// <param name="policyNumber">Initial value of the PolicyNumber property.</param>
        /// <param name="expiryDate">Initial value of the ExpiryDate property.</param>
        /// <param name="idPassport">Initial value of the idPassport property.</param>
        public static InsurancePolicies CreateInsurancePolicies(global::System.Int32 id, global::System.Int32 idInsuranceCompany, global::System.String policyNumber, global::System.DateTime expiryDate, global::System.Int32 idPassport)
        {
            InsurancePolicies insurancePolicies = new InsurancePolicies();
            insurancePolicies.id = id;
            insurancePolicies.idInsuranceCompany = idInsuranceCompany;
            insurancePolicies.PolicyNumber = policyNumber;
            insurancePolicies.ExpiryDate = expiryDate;
            insurancePolicies.idPassport = idPassport;
            return insurancePolicies;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idInsuranceCompany
        {
            get
            {
                return _idInsuranceCompany;
            }
            set
            {
                OnidInsuranceCompanyChanging(value);
                ReportPropertyChanging("idInsuranceCompany");
                _idInsuranceCompany = StructuralObject.SetValidValue(value, "idInsuranceCompany");
                ReportPropertyChanged("idInsuranceCompany");
                OnidInsuranceCompanyChanged();
            }
        }
        private global::System.Int32 _idInsuranceCompany;
        partial void OnidInsuranceCompanyChanging(global::System.Int32 value);
        partial void OnidInsuranceCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, false, "PolicyNumber");
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value, "ExpiryDate");
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private global::System.DateTime _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.DateTime value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPassport
        {
            get
            {
                return _idPassport;
            }
            set
            {
                OnidPassportChanging(value);
                ReportPropertyChanging("idPassport");
                _idPassport = StructuralObject.SetValidValue(value, "idPassport");
                ReportPropertyChanged("idPassport");
                OnidPassportChanged();
            }
        }
        private global::System.Int32 _idPassport;
        partial void OnidPassportChanging(global::System.Int32 value);
        partial void OnidPassportChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies")]
        public InsuranceCompanies InsuranceCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompanies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompanies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsuranceCompanies> InsuranceCompaniesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompanies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsuranceCompanies>("BigBoarsModel.fk_idInsuranceCompany_InsurancePolicies", "InsuranceCompanies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPassport_InsurancePolicies", "Passports")]
        public Passports Passports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("BigBoarsModel.fk_idPassport_InsurancePolicies", "Passports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("BigBoarsModel.fk_idPassport_InsurancePolicies", "Passports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Passports> PassportsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Passports>("BigBoarsModel.fk_idPassport_InsurancePolicies", "Passports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Passports>("BigBoarsModel.fk_idPassport_InsurancePolicies", "Passports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPolicy_Medcards", "Medcards")]
        public EntityCollection<Medcards> Medcards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medcards>("BigBoarsModel.fk_idPolicy_Medcards", "Medcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medcards>("BigBoarsModel.fk_idPolicy_Medcards", "Medcards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="MedAppointments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedAppointments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedAppointments object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idMedcard">Initial value of the idMedcard property.</param>
        /// <param name="appointmentDate">Initial value of the AppointmentDate property.</param>
        /// <param name="diagnose">Initial value of the Diagnose property.</param>
        /// <param name="idDoctor">Initial value of the idDoctor property.</param>
        public static MedAppointments CreateMedAppointments(global::System.Int32 id, global::System.Int32 idMedcard, global::System.DateTime appointmentDate, global::System.String diagnose, global::System.Int32 idDoctor)
        {
            MedAppointments medAppointments = new MedAppointments();
            medAppointments.id = id;
            medAppointments.idMedcard = idMedcard;
            medAppointments.AppointmentDate = appointmentDate;
            medAppointments.Diagnose = diagnose;
            medAppointments.idDoctor = idDoctor;
            return medAppointments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMedcard
        {
            get
            {
                return _idMedcard;
            }
            set
            {
                OnidMedcardChanging(value);
                ReportPropertyChanging("idMedcard");
                _idMedcard = StructuralObject.SetValidValue(value, "idMedcard");
                ReportPropertyChanged("idMedcard");
                OnidMedcardChanged();
            }
        }
        private global::System.Int32 _idMedcard;
        partial void OnidMedcardChanging(global::System.Int32 value);
        partial void OnidMedcardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AppointmentDate
        {
            get
            {
                return _AppointmentDate;
            }
            set
            {
                OnAppointmentDateChanging(value);
                ReportPropertyChanging("AppointmentDate");
                _AppointmentDate = StructuralObject.SetValidValue(value, "AppointmentDate");
                ReportPropertyChanged("AppointmentDate");
                OnAppointmentDateChanged();
            }
        }
        private global::System.DateTime _AppointmentDate;
        partial void OnAppointmentDateChanging(global::System.DateTime value);
        partial void OnAppointmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextAppointmentDate
        {
            get
            {
                return _NextAppointmentDate;
            }
            set
            {
                OnNextAppointmentDateChanging(value);
                ReportPropertyChanging("NextAppointmentDate");
                _NextAppointmentDate = StructuralObject.SetValidValue(value, "NextAppointmentDate");
                ReportPropertyChanged("NextAppointmentDate");
                OnNextAppointmentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextAppointmentDate;
        partial void OnNextAppointmentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextAppointmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Diagnose
        {
            get
            {
                return _Diagnose;
            }
            set
            {
                OnDiagnoseChanging(value);
                ReportPropertyChanging("Diagnose");
                _Diagnose = StructuralObject.SetValidValue(value, false, "Diagnose");
                ReportPropertyChanged("Diagnose");
                OnDiagnoseChanged();
            }
        }
        private global::System.String _Diagnose;
        partial void OnDiagnoseChanging(global::System.String value);
        partial void OnDiagnoseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idDoctor
        {
            get
            {
                return _idDoctor;
            }
            set
            {
                OnidDoctorChanging(value);
                ReportPropertyChanging("idDoctor");
                _idDoctor = StructuralObject.SetValidValue(value, "idDoctor");
                ReportPropertyChanged("idDoctor");
                OnidDoctorChanged();
            }
        }
        private global::System.Int32 _idDoctor;
        partial void OnidDoctorChanging(global::System.Int32 value);
        partial void OnidDoctorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idDoctor_MedAppointments", "Doctors")]
        public Doctors Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_MedAppointments", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_MedAppointments", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctors> DoctorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_MedAppointments", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctors>("BigBoarsModel.fk_idDoctor_MedAppointments", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedApp_HAD", "HealingAndDiagnostics")]
        public EntityCollection<HealingAndDiagnostics> HealingAndDiagnostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HealingAndDiagnostics>("BigBoarsModel.fk_idMedApp_HAD", "HealingAndDiagnostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HealingAndDiagnostics>("BigBoarsModel.fk_idMedApp_HAD", "HealingAndDiagnostics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedApp_Hosp", "Hospitalizations")]
        public EntityCollection<Hospitalizations> Hospitalizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idMedApp_Hosp", "Hospitalizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hospitalizations>("BigBoarsModel.fk_idMedApp_Hosp", "Hospitalizations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedcard_MedAppointments", "Medcards")]
        public Medcards Medcards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medcards>("BigBoarsModel.fk_idMedcard_MedAppointments", "Medcards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medcards>("BigBoarsModel.fk_idMedcard_MedAppointments", "Medcards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medcards> MedcardsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medcards>("BigBoarsModel.fk_idMedcard_MedAppointments", "Medcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medcards>("BigBoarsModel.fk_idMedcard_MedAppointments", "Medcards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Medcards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medcards : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medcards object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="medcardNumber">Initial value of the MedcardNumber property.</param>
        /// <param name="idPolicy">Initial value of the idPolicy property.</param>
        /// <param name="dateIssued">Initial value of the DateIssued property.</param>
        public static Medcards CreateMedcards(global::System.Int32 id, global::System.String medcardNumber, global::System.Int32 idPolicy, global::System.DateTime dateIssued)
        {
            Medcards medcards = new Medcards();
            medcards.id = id;
            medcards.MedcardNumber = medcardNumber;
            medcards.idPolicy = idPolicy;
            medcards.DateIssued = dateIssued;
            return medcards;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcardNumber
        {
            get
            {
                return _MedcardNumber;
            }
            set
            {
                OnMedcardNumberChanging(value);
                ReportPropertyChanging("MedcardNumber");
                _MedcardNumber = StructuralObject.SetValidValue(value, false, "MedcardNumber");
                ReportPropertyChanged("MedcardNumber");
                OnMedcardNumberChanged();
            }
        }
        private global::System.String _MedcardNumber;
        partial void OnMedcardNumberChanging(global::System.String value);
        partial void OnMedcardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPolicy
        {
            get
            {
                return _idPolicy;
            }
            set
            {
                OnidPolicyChanging(value);
                ReportPropertyChanging("idPolicy");
                _idPolicy = StructuralObject.SetValidValue(value, "idPolicy");
                ReportPropertyChanged("idPolicy");
                OnidPolicyChanged();
            }
        }
        private global::System.Int32 _idPolicy;
        partial void OnidPolicyChanging(global::System.Int32 value);
        partial void OnidPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateIssued
        {
            get
            {
                return _DateIssued;
            }
            set
            {
                OnDateIssuedChanging(value);
                ReportPropertyChanging("DateIssued");
                _DateIssued = StructuralObject.SetValidValue(value, "DateIssued");
                ReportPropertyChanged("DateIssued");
                OnDateIssuedChanged();
            }
        }
        private global::System.DateTime _DateIssued;
        partial void OnDateIssuedChanging(global::System.DateTime value);
        partial void OnDateIssuedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPolicy_Medcards", "InsurancePolicies")]
        public InsurancePolicies InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicies>("BigBoarsModel.fk_idPolicy_Medcards", "InsurancePolicies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicies>("BigBoarsModel.fk_idPolicy_Medcards", "InsurancePolicies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsurancePolicies> InsurancePoliciesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicies>("BigBoarsModel.fk_idPolicy_Medcards", "InsurancePolicies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsurancePolicies>("BigBoarsModel.fk_idPolicy_Medcards", "InsurancePolicies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idMedcard_MedAppointments", "MedAppointments")]
        public EntityCollection<MedAppointments> MedAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedAppointments>("BigBoarsModel.fk_idMedcard_MedAppointments", "MedAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedAppointments>("BigBoarsModel.fk_idMedcard_MedAppointments", "MedAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="MedProcedures")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedProcedures : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedProcedures object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="procedureName">Initial value of the ProcedureName property.</param>
        /// <param name="idProcedureType">Initial value of the idProcedureType property.</param>
        public static MedProcedures CreateMedProcedures(global::System.Int32 id, global::System.String procedureName, global::System.Int32 idProcedureType)
        {
            MedProcedures medProcedures = new MedProcedures();
            medProcedures.id = id;
            medProcedures.ProcedureName = procedureName;
            medProcedures.idProcedureType = idProcedureType;
            return medProcedures;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcedureName
        {
            get
            {
                return _ProcedureName;
            }
            set
            {
                OnProcedureNameChanging(value);
                ReportPropertyChanging("ProcedureName");
                _ProcedureName = StructuralObject.SetValidValue(value, false, "ProcedureName");
                ReportPropertyChanged("ProcedureName");
                OnProcedureNameChanged();
            }
        }
        private global::System.String _ProcedureName;
        partial void OnProcedureNameChanging(global::System.String value);
        partial void OnProcedureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProcedureType
        {
            get
            {
                return _idProcedureType;
            }
            set
            {
                OnidProcedureTypeChanging(value);
                ReportPropertyChanging("idProcedureType");
                _idProcedureType = StructuralObject.SetValidValue(value, "idProcedureType");
                ReportPropertyChanged("idProcedureType");
                OnidProcedureTypeChanged();
            }
        }
        private global::System.Int32 _idProcedureType;
        partial void OnidProcedureTypeChanging(global::System.Int32 value);
        partial void OnidProcedureTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idProc_HADP", "HAD_Procedures")]
        public EntityCollection<HAD_Procedures> HAD_Procedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HAD_Procedures>("BigBoarsModel.fk_idProc_HADP", "HAD_Procedures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HAD_Procedures>("BigBoarsModel.fk_idProc_HADP", "HAD_Procedures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idProcType_MedProcs", "ProcedureTypes")]
        public ProcedureTypes ProcedureTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureTypes>("BigBoarsModel.fk_idProcType_MedProcs", "ProcedureTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureTypes>("BigBoarsModel.fk_idProcType_MedProcs", "ProcedureTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProcedureTypes> ProcedureTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureTypes>("BigBoarsModel.fk_idProcType_MedProcs", "ProcedureTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProcedureTypes>("BigBoarsModel.fk_idProcType_MedProcs", "ProcedureTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Passports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Passports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Passports object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idPatient">Initial value of the idPatient property.</param>
        /// <param name="passportNumber">Initial value of the PassportNumber property.</param>
        public static Passports CreatePassports(global::System.Int32 id, global::System.Int32 idPatient, global::System.String passportNumber)
        {
            Passports passports = new Passports();
            passports.id = id;
            passports.idPatient = idPatient;
            passports.PassportNumber = passportNumber;
            return passports;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPatient
        {
            get
            {
                return _idPatient;
            }
            set
            {
                OnidPatientChanging(value);
                ReportPropertyChanging("idPatient");
                _idPatient = StructuralObject.SetValidValue(value, "idPatient");
                ReportPropertyChanged("idPatient");
                OnidPatientChanged();
            }
        }
        private global::System.Int32 _idPatient;
        partial void OnidPatientChanging(global::System.Int32 value);
        partial void OnidPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, false, "PassportNumber");
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPassport_InsurancePolicies", "InsurancePolicies")]
        public EntityCollection<InsurancePolicies> InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicies>("BigBoarsModel.fk_idPassport_InsurancePolicies", "InsurancePolicies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicies>("BigBoarsModel.fk_idPassport_InsurancePolicies", "InsurancePolicies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Passports", "Patients")]
        public Patients Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Passports", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Passports", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patients> PatientsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Passports", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Passports", "Patients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Patients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patients : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patients object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="idGender">Initial value of the idGender property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="idAddress">Initial value of the idAddress property.</param>
        public static Patients CreatePatients(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Int32 idGender, global::System.DateTime birthDate, global::System.Int32 idAddress)
        {
            Patients patients = new Patients();
            patients.id = id;
            patients.FirstName = firstName;
            patients.LastName = lastName;
            patients.idGender = idGender;
            patients.BirthDate = birthDate;
            patients.idAddress = idAddress;
            return patients;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PatientPhotoLink
        {
            get
            {
                return _PatientPhotoLink;
            }
            set
            {
                OnPatientPhotoLinkChanging(value);
                ReportPropertyChanging("PatientPhotoLink");
                _PatientPhotoLink = StructuralObject.SetValidValue(value, true, "PatientPhotoLink");
                ReportPropertyChanged("PatientPhotoLink");
                OnPatientPhotoLinkChanged();
            }
        }
        private global::System.String _PatientPhotoLink;
        partial void OnPatientPhotoLinkChanging(global::System.String value);
        partial void OnPatientPhotoLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGender
        {
            get
            {
                return _idGender;
            }
            set
            {
                OnidGenderChanging(value);
                ReportPropertyChanging("idGender");
                _idGender = StructuralObject.SetValidValue(value, "idGender");
                ReportPropertyChanged("idGender");
                OnidGenderChanged();
            }
        }
        private global::System.Int32 _idGender;
        partial void OnidGenderChanging(global::System.Int32 value);
        partial void OnidGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAddress
        {
            get
            {
                return _idAddress;
            }
            set
            {
                OnidAddressChanging(value);
                ReportPropertyChanging("idAddress");
                _idAddress = StructuralObject.SetValidValue(value, "idAddress");
                ReportPropertyChanged("idAddress");
                OnidAddressChanged();
            }
        }
        private global::System.Int32 _idAddress;
        partial void OnidAddressChanging(global::System.Int32 value);
        partial void OnidAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, true, "WorkPlace");
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idAddress_Patients", "Addresses")]
        public Addresses Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("BigBoarsModel.fk_idAddress_Patients", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("BigBoarsModel.fk_idAddress_Patients", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Addresses> AddressesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Addresses>("BigBoarsModel.fk_idAddress_Patients", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Addresses>("BigBoarsModel.fk_idAddress_Patients", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Emails", "Emails")]
        public EntityCollection<Emails> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Emails>("BigBoarsModel.fk_idPatient_Emails", "Emails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Emails>("BigBoarsModel.fk_idPatient_Emails", "Emails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idGender_Patients", "Genders")]
        public Genders Genders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genders>("BigBoarsModel.fk_idGender_Patients", "Genders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genders>("BigBoarsModel.fk_idGender_Patients", "Genders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genders> GendersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genders>("BigBoarsModel.fk_idGender_Patients", "Genders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genders>("BigBoarsModel.fk_idGender_Patients", "Genders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Passports", "Passports")]
        public EntityCollection<Passports> Passports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Passports>("BigBoarsModel.fk_idPatient_Passports", "Passports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Passports>("BigBoarsModel.fk_idPatient_Passports", "Passports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Phones", "Phones")]
        public EntityCollection<Phones> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phones>("BigBoarsModel.fk_idPatient_Phones", "Phones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phones>("BigBoarsModel.fk_idPatient_Phones", "Phones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Phones")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phones : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phones object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idPatient">Initial value of the idPatient property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Phones CreatePhones(global::System.Int32 id, global::System.Int32 idPatient, global::System.String phone)
        {
            Phones phones = new Phones();
            phones.id = id;
            phones.idPatient = idPatient;
            phones.Phone = phone;
            return phones;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPatient
        {
            get
            {
                return _idPatient;
            }
            set
            {
                OnidPatientChanging(value);
                ReportPropertyChanging("idPatient");
                _idPatient = StructuralObject.SetValidValue(value, "idPatient");
                ReportPropertyChanged("idPatient");
                OnidPatientChanged();
            }
        }
        private global::System.Int32 _idPatient;
        partial void OnidPatientChanging(global::System.Int32 value);
        partial void OnidPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idPatient_Phones", "Patients")]
        public Patients Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Phones", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Phones", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patients> PatientsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Phones", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patients>("BigBoarsModel.fk_idPatient_Phones", "Patients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="ProcedureTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcedureTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcedureTypes object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static ProcedureTypes CreateProcedureTypes(global::System.Int32 id, global::System.String typeName)
        {
            ProcedureTypes procedureTypes = new ProcedureTypes();
            procedureTypes.id = id;
            procedureTypes.TypeName = typeName;
            return procedureTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false, "TypeName");
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idProcType_MedProcs", "MedProcedures")]
        public EntityCollection<MedProcedures> MedProcedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedProcedures>("BigBoarsModel.fk_idProcType_MedProcs", "MedProcedures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedProcedures>("BigBoarsModel.fk_idProcType_MedProcs", "MedProcedures", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roles object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Roles CreateRoles(global::System.Int32 id, global::System.String roleName)
        {
            Roles roles = new Roles();
            roles.id = id;
            roles.RoleName = roleName;
            return roles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BigBoarsModel", "fk_idRole_Doctors", "Doctors")]
        public EntityCollection<Doctors> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctors>("BigBoarsModel.fk_idRole_Doctors", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctors>("BigBoarsModel.fk_idRole_Doctors", "Doctors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BigBoarsModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }

    #endregion

}
